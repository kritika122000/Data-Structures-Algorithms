#include<iostream>
using namespace std;
class node{
	public:
	int data;
	node*right,*left;

    node(int d){
		data=d;
		right=left=NULL;
	}
};
node* build(int* pre,int*in,int s,int e){
	static int i=0;
    //badse case
	if(s>e){
		return NULL;
	}
    //recursive case 
	node*root=new node(pre[i]);
	int target=0;
	for(int j=s;j<=e;j++){
		if(pre[i]==in[j]){
             target=j;
			 break;
		}
	}
	i++;
	root->left=build(pre,in,s,target-1);
	root->right=build(pre,in,target+1,e);
	return root;
}
void preorder(node*root){
	if(root==NULL)
	return;
	cout<<root->data<<" ";
	preorder(root->left);
	preorder(root->right);
}
void print(node*root){
  if(root==NULL)
  return;

 if(root->left==NULL && root->right!=NULL){
cout<<"END"<<" => "<<root->data<<" <= "<<root->right->data<<endl;
 }
 else if(root->right==NULL && root->left!=NULL){
 cout<<root->left->data<<" => "<<root->data<<" <= "<<"END"<<endl;	 
 }
 else if(root->right==NULL && root->left== NULL){
	 cout<<"END"<<" => "<<root->data<<" <= "<<"END"<<endl;
 }
 else{
  cout<<root->left->data<<" => "<<root->data<<" <= "<<root->right->data<<endl;
 }
  print(root->left);
  print(root->right);

}
int main() {
	int n;
	cin>>n;
	int pre[n],in[n];
	for(int i=0;i<n;i++)
	cin>>pre[i];
	cin>>n;
	for(int i=0;i<n;i++)
	cin>>in[i];
	node*root=build(pre,in,0,n-1);
	print(root);
	return 0;
}
